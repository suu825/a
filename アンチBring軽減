local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui") -- CoreGuiに配置

-- トグルの状態を管理する変数
local toggleEnabled = false

local function processPart(part)
    local character = Players.LocalPlayer.Character
    if not toggleEnabled or not character or not character:FindFirstChild("Head") or not part:IsA("BasePart") then
        return
    end

    if part.Anchored or part:IsDescendantOf(character) then
        return
    end

    if part.Name == "Torso" or part.Name == "Head" or part.Name == "Right Arm" or part.Name == "Left Arm" or
       part.Name == "Right Leg" or part.Name == "Left Leg" or part.Name == "HumanoidRootPart" then
        return
    end

    -- `BodyPosition` が既に存在するか確認
    local existingForce = part:FindFirstChildOfClass("BodyPosition")
    if existingForce then
        existingForce.Position = Vector3.new(0, 20000000, 0)
        return
    end

    -- 新しい `BodyPosition` を作成
    local ForceInstance = Instance.new("BodyPosition")
    ForceInstance.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
    ForceInstance.Position = Vector3.new(0, 20000000, 0)
    ForceInstance.P = 6000000000000 -- 強さ (値を大きくするほど速く目標座標に移動)
    ForceInstance.D = 6000000 -- 減衰 (値を大きくするほど振動を抑制)
    ForceInstance.Parent = part
end

-- 初期ロード時にすべてのパーツを処理
local function processAllParts()
    for _, part in pairs(Workspace:GetDescendants()) do
        processPart(part)
    end
end

-- トグルボタンの作成
local ScreenGui = Instance.new("ScreenGui")
local ToggleButton = Instance.new("TextButton")

ScreenGui.Name = "ToggleGui"
ScreenGui.Parent = CoreGui -- CoreGuiに配置

ToggleButton.Name = "ToggleButton"
ToggleButton.Size = UDim2.new(0, 130, 0, 50)
ToggleButton.Position = UDim2.new(0.5, -100, 0.5, -25)
ToggleButton.Text = "Bring軽減　オンにする"
ToggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
ToggleButton.Font = Enum.Font.SourceSansBold
ToggleButton.TextSize = 18
ToggleButton.Parent = ScreenGui

-- ドラッグ機能
local dragging = false
local dragStart, startPos

ToggleButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = ToggleButton.Position
    end
end)

ToggleButton.InputChanged:Connect(function(input)
    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        local delta = input.Position - dragStart
        ToggleButton.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end
end)

ToggleButton.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = false
    end
end)

-- トグルボタンのクリック時の動作
ToggleButton.MouseButton1Click:Connect(function()
    toggleEnabled = not toggleEnabled

    if toggleEnabled then
        ToggleButton.Text = "Bring軽減　オン"
        ToggleButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        processAllParts()
    else
        ToggleButton.Text = "Bring軽減　オフ"
        ToggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    end
end)

-- 新たに追加されたパーツをリアルタイムで処理
Workspace.DescendantAdded:Connect(function(part)
    if toggleEnabled then
        processPart(part)
    end
end)
