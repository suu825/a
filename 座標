-- 必要なサービス
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

-- ローカルプレイヤーの取得
local localPlayer = Players.LocalPlayer

-- GUI の作成
local playerGui = localPlayer:WaitForChild("PlayerGui")
local MainScreenGui = Instance.new("ScreenGui")
MainScreenGui.Name = "PlayerCoordinatesGui"
MainScreenGui.ResetOnSpawn = false
MainScreenGui.Parent = playerGui

-- スクロール可能なフレームを作成
local MainFrame = Instance.new("ScrollingFrame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(0, 400, 0, 300)
MainFrame.Position = UDim2.new(0.5, -200, 0.5, -150)
MainFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
MainFrame.BorderSizePixel = 2
MainFrame.Active = true
MainFrame.ScrollBarThickness = 10 -- スライダーの幅
MainFrame.CanvasSize = UDim2.new(0, 0, 0, 0) -- CanvasSizeは後で更新
MainFrame.Parent = MainScreenGui

local UIListLayout = Instance.new("UIListLayout")
UIListLayout.Parent = MainFrame
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

-- プレイヤーごとに座標を表示するラベルを管理する辞書
local playerLabels = {}

-- スクロール可能なキャンバスサイズを更新
local function updateCanvasSize()
    local layout = MainFrame:FindFirstChildOfClass("UIListLayout")
    if layout then
        MainFrame.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y)
    end
end

-- プレイヤーラベルを更新する関数
local function updatePlayerLabels()
    for _, player in pairs(Players:GetPlayers()) do
        -- プレイヤーラベルがなければ作成
        if not playerLabels[player] then
            local label = Instance.new("TextLabel")
            label.Name = player.Name
            label.Size = UDim2.new(1, 0, 0, 30)
            label.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
            label.TextColor3 = Color3.fromRGB(255, 255, 255)
            label.Font = Enum.Font.SourceSansBold
            label.TextSize = 14
            label.Text = player.Name .. ": Loading..."
            label.Parent = MainFrame
            playerLabels[player] = label
        end

        -- 座標を更新
        local character = player.Character
        local humanoidRootPart = character and character:FindFirstChild("HumanoidRootPart")
        if humanoidRootPart then
            local position = humanoidRootPart.Position
            -- 小数点以下1桁で正確に座標を表示
            playerLabels[player].Text = string.format(
                "%s: X: %.1f, Y: %.1f, Z: %.1f",
                player.Name,
                position.X,
                position.Y,
                position.Z
            )
        else
            playerLabels[player].Text = player.Name .. ": Not in game"
        end
    end

    -- キャンバスサイズを更新
    updateCanvasSize()
end

-- プレイヤーが退出した際にラベルを削除
Players.PlayerRemoving:Connect(function(player)
    if playerLabels[player] then
        playerLabels[player]:Destroy()
        playerLabels[player] = nil
        updateCanvasSize()
    end
end)

-- フレームごとにプレイヤー座標を更新
RunService.RenderStepped:Connect(updatePlayerLabels)

-- ドラッグ可能にする
local dragging = false
local dragStart
local startPos

MainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
    end
end)

MainFrame.InputChanged:Connect(function(input)
    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        local delta = input.Position - dragStart
        MainFrame.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end
end)

MainFrame.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = false
    end
end)
