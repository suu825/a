local OrionLib = loadstring(game:HttpGet('https://raw.githubusercontent.com/BlizTBr/scripts/main/Orion%20X'))()
local Window = OrionLib:MakeWindow({
    Name = "あん",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "ちーたーしね",
    IntroEnabled = true,
    IntroText = "なに、やんの？",
    IntroIcon = "",
    Icon = ""
})

local GrabTab = Window:MakeTab({Name = "無敵突破", Icon = "rbxassetid://4483345998", PremiumOnly = false})

-- Modify ApplyKickToPlayers to target only selected player

local Players = game:GetService("Players")
local playerNames = {}

for _, player in ipairs(Players:GetPlayers()) do
    table.insert(playerNames, player.Name)
end

local Bring

GrabTab:AddLabel("ブロブマンではありません")
GrabTab:AddLabel("freezeの方からやらないと意味ありません")
local PlayerDropdown = GrabTab:AddDropdown({
    Name = "Bringしたいプレイヤーを選ぶ",
    Options = playerNames,
    Callback = function(selected)
        Bring = selected  -- Store the selected player name
    end
})

local function RefreshPlayerList()
    playerNames = {}
    for _, player in ipairs(Players:GetPlayers()) do
        table.insert(playerNames, player.Name)
    end
    PlayerDropdown:Refresh(playerNames, true)
end

Players.PlayerAdded:Connect(function()
    RefreshPlayerList()
end)

Players.PlayerRemoving:Connect(function()
    RefreshPlayerList()
end)

GrabTab:AddButton({
    Name = "選択したプレイヤーをBring",
    Callback = function()

local Players = game:GetService("Players") -- Ensure to get the Players service
local targetPlayer = Players:FindFirstChild(Bring)

if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
    local localPlayer = Players.LocalPlayer
    local localPosition = localPlayer.Character.HumanoidRootPart.Position
    -- Get the direction the local player is facing
    local lookVector = localPlayer.Character.HumanoidRootPart.CFrame.LookVector

    -- Calculate the new position 2 meters in front of the local player
    local targetPosition = localPosition + (lookVector * 5)

    -- Move the target player's HumanoidRootPart to this new position
    targetPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(targetPosition)
else
    print("選択したプレイヤーが見つかりません。")
end

    end
})



local Players = game:GetService("Players")
local playerNames = {}

for _, player in ipairs(Players:GetPlayers()) do
    table.insert(playerNames, player.Name)
end

local FreezeP

GrabTab:AddLabel("選んだプレイヤーをfreezeさせたらBringを押してください")
GrabTab:AddLabel("Bringしたら相手のブロブマンが来ると思います")
GrabTab:AddLabel("姿は見えないと思うので一度freezeオフにしてすぐオンにするといいです")
GrabTab:AddLabel("そして雪玉だして相手に当てるだけ")
local PlayerDropdown = GrabTab:AddDropdown({
    Name = "freezeさせたいプレイヤーを選ぶ",
    Options = playerNames,
    Callback = function(selected)
        FreezeP = selected  -- Store the selected player name
    end
})

local function RefreshPlayerList()
    playerNames = {}
    for _, player in ipairs(Players:GetPlayers()) do
        table.insert(playerNames, player.Name)
    end
    PlayerDropdown:Refresh(playerNames, true)
end

Players.PlayerAdded:Connect(function()
    RefreshPlayerList()
end)

Players.PlayerRemoving:Connect(function()
    RefreshPlayerList()
end)

-- Function to freeze or unfreeze the selected player
local isFrozen = false

local function toggleFreezeSelectedPlayer()
    if FreezeP then
        local playerToFreeze = Players:FindFirstChild(FreezeP)
        
        if playerToFreeze and playerToFreeze.Character then
            local character = playerToFreeze.Character
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.Anchored = not isFrozen  -- Toggle Anchored based on isFrozen state
                end
            end
            
            isFrozen = not isFrozen  -- Toggle the freeze state
        else
            print("Selected player does not have a character.")
        end
    else
        print("No player selected.")
    end
end

GrabTab:AddToggle({
    Name = "選んだプレイヤーをfreeze",
    Default = false,
    Callback = function(toggleState)
        if toggleState then
            toggleFreezeSelectedPlayer()  -- Call the function to freeze the selected player
        else
            toggleFreezeSelectedPlayer()  -- Call the function to unfreeze the selected player
        end
    end
})




OrionLib:init()
